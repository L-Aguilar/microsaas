// Common country codes for phone numbers - Latam focused
export const countryCodes = [
  { code: "+504", country: "Honduras", flag: "ğŸ‡­ğŸ‡³" },
  { code: "+52", country: "MÃ©xico", flag: "ğŸ‡²ğŸ‡½" },
  { code: "+502", country: "Guatemala", flag: "ğŸ‡¬ğŸ‡¹" },
  { code: "+503", country: "El Salvador", flag: "ğŸ‡¸ğŸ‡»" },
  { code: "+505", country: "Nicaragua", flag: "ğŸ‡³ğŸ‡®" },
  { code: "+506", country: "Costa Rica", flag: "ğŸ‡¨ğŸ‡·" },
  { code: "+507", country: "PanamÃ¡", flag: "ğŸ‡µğŸ‡¦" },
  { code: "+57", country: "Colombia", flag: "ğŸ‡¨ğŸ‡´" },
  { code: "+58", country: "Venezuela", flag: "ğŸ‡»ğŸ‡ª" },
  { code: "+55", country: "Brasil", flag: "ğŸ‡§ğŸ‡·" },
  { code: "+54", country: "Argentina", flag: "ğŸ‡¦ğŸ‡·" },
  { code: "+56", country: "Chile", flag: "ğŸ‡¨ğŸ‡±" },
  { code: "+51", country: "PerÃº", flag: "ğŸ‡µğŸ‡ª" },
  { code: "+593", country: "Ecuador", flag: "ğŸ‡ªğŸ‡¨" },
  { code: "+591", country: "Bolivia", flag: "ğŸ‡§ğŸ‡´" },
  { code: "+598", country: "Uruguay", flag: "ğŸ‡ºğŸ‡¾" },
  { code: "+595", country: "Paraguay", flag: "ğŸ‡µğŸ‡¾" },
  { code: "+1", country: "Estados Unidos/CanadÃ¡", flag: "ğŸ‡ºğŸ‡¸" },
  { code: "+34", country: "EspaÃ±a", flag: "ğŸ‡ªğŸ‡¸" },
];

// Clean phone number by removing special characters
export function cleanPhoneNumber(phone: string): string {
  if (!phone) return "";
  
  // Remove all non-numeric characters except the initial + sign
  const cleaned = phone.replace(/[^\d+]/g, '');
  
  // Ensure only one + at the beginning
  if (cleaned.startsWith('+')) {
    return '+' + cleaned.substring(1).replace(/\+/g, '');
  }
  
  return cleaned.replace(/\+/g, '');
}

// Format phone number for display (add basic formatting)
export function formatPhoneNumber(phone: string): string {
  const cleaned = cleanPhoneNumber(phone);
  
  if (!cleaned) return "";
  
  // For now, just return the cleaned number without formatting
  // This prevents unwanted spaces and formatting issues
  return cleaned;
}

// Validate phone number format
export function isValidPhoneNumber(phone: string): boolean {
  const cleaned = cleanPhoneNumber(phone);
  
  // Must start with + and have at least 8 digits total
  if (!cleaned.startsWith('+') || cleaned.length < 8) {
    return false;
  }
  
  // Must contain only digits after the +
  const digits = cleaned.substring(1);
  return /^\d+$/.test(digits) && digits.length >= 7 && digits.length <= 15;
}